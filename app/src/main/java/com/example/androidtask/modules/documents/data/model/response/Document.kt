package com.example.androidtask.modules.documents.data.model.response


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
data class Document(
    @Json(name = "author_alternative_name")
    val authorAlternativeName: List<String>?,
    @Json(name = "author_facet")
    val authorFacet: List<String>?,
    @Json(name = "author_key")
    val authorKey: List<String>?,
    @Json(name = "author_name")
    val authorName: List<String>?,
    @Json(name = "contributor")
    val contributor: List<String>?,
    @Json(name = "cover_edition_key")
    val coverEditionKey: String?,
    @Json(name = "cover_i")
    val coverI: Int?,
    @Json(name = "ddc")
    val ddc: List<String>?,
    @Json(name = "ddc_sort")
    val ddcSort: String?,
    @Json(name = "ebook_count_i")
    val ebookCountI: Int?,
    @Json(name = "edition_count")
    val editionCount: Int?,
    @Json(name = "edition_key")
    val editionKey: List<String>?,
    @Json(name = "first_publish_year")
    val firstPublishYear: Int?,
    @Json(name = "first_sentence")
    val firstSentence: List<String>?,
    @Json(name = "has_fulltext")
    val hasFulltext: Boolean?,
    @Json(name = "ia")
    val ia: List<String>?,
    @Json(name = "ia_box_id")
    val iaBoxId: List<String>?,
    @Json(name = "ia_collection_s")
    val iaCollectionS: String?,
    @Json(name = "ia_loaded_id")
    val iaLoadedId: List<String>?,
    @Json(name = "id_alibris_id")
    val idAlibrisId: List<String>?,
    @Json(name = "id_amazon")
    val idAmazon: List<String>?,
    @Json(name = "id_amazon_ca_asin")
    val idAmazonCaAsin: List<String>?,
    @Json(name = "id_amazon_co_uk_asin")
    val idAmazonCoUkAsin: List<String>?,
    @Json(name = "id_amazon_de_asin")
    val idAmazonDeAsin: List<String>?,
    @Json(name = "id_amazon_it_asin")
    val idAmazonItAsin: List<String>?,
    @Json(name = "id_bcid")
    val idBcid: List<String>?,
    @Json(name = "id_british_national_bibliography")
    val idBritishNationalBibliography: List<String>?,
    @Json(name = "id_canadian_national_library_archive")
    val idCanadianNationalLibraryArchive: List<String>?,
    @Json(name = "id_dep_sito_legal")
    val idDepSitoLegal: List<String>?,
    @Json(name = "id_goodreads")
    val idGoodreads: List<String>?,
    @Json(name = "id_google")
    val idGoogle: List<String>?,
    @Json(name = "id_librarything")
    val idLibrarything: List<String>?,
    @Json(name = "id_nla")
    val idNla: List<String>?,
    @Json(name = "id_overdrive")
    val idOverdrive: List<String>?,
    @Json(name = "id_paperback_swap")
    val idPaperbackSwap: List<String>?,
    @Json(name = "id_wikidata")
    val idWikidata: List<String>?,
    @Json(name = "isbn")
    val isbn: List<String>?,
    @Json(name = "key")
    val key: String?,
    @Json(name = "language")
    val language: List<String>?,
    @Json(name = "last_modified_i")
    val lastModifiedI: Int?,
    @Json(name = "lcc")
    val lcc: List<String>?,
    @Json(name = "lcc_sort")
    val lccSort: String?,
    @Json(name = "lccn")
    val lccn: List<String>?,
    @Json(name = "lending_edition_s")
    val lendingEditionS: String?,
    @Json(name = "lending_identifier_s")
    val lendingIdentifierS: String?,
    @Json(name = "oclc")
    val oclc: List<String>?,
    @Json(name = "person")
    val person: List<String>?,
    @Json(name = "person_facet")
    val personFacet: List<String>?,
    @Json(name = "person_key")
    val personKey: List<String>?,
    @Json(name = "place")
    val place: List<String>?,
    @Json(name = "place_facet")
    val placeFacet: List<String>?,
    @Json(name = "place_key")
    val placeKey: List<String>?,
    @Json(name = "printdisabled_s")
    val printdisabledS: String?,
    @Json(name = "public_scan_b")
    val publicScanB: Boolean?,
    @Json(name = "publish_date")
    val publishDate: List<String>?,
    @Json(name = "publish_place")
    val publishPlace: List<String>?,
    @Json(name = "publish_year")
    val publishYear: List<Int>?,
    @Json(name = "publisher")
    val publisher: List<String>?,
    @Json(name = "publisher_facet")
    val publisherFacet: List<String>?,
    @Json(name = "seed")
    val seed: List<String>?,
    @Json(name = "subject")
    val subject: List<String>?,
    @Json(name = "subject_facet")
    val subjectFacet: List<String>?,
    @Json(name = "subject_key")
    val subjectKey: List<String>?,
    @Json(name = "subtitle")
    val subtitle: String?,
    @Json(name = "text")
    val text: List<String>?,
    @Json(name = "time")
    val time: List<String>?,
    @Json(name = "time_facet")
    val timeFacet: List<String>?,
    @Json(name = "time_key")
    val timeKey: List<String>?,
    @Json(name = "title")
    val title: String?,
    @Json(name = "title_suggest")
    val titleSuggest: String?,
    @Json(name = "type")
    val type: String?,
    @Json(name = "_version_")
    val version: Long?
)